

All parameterized rules:
{'Try': {'var': {'i': VarType(NODE)}, 'guard': OpExpr(=, n[i].st, I), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('i')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'T'))]}, 'Crit': {'var': {'i': VarType(NODE)}, 'guard': OpExpr(&, n[i].st = T, x = true), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('i')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'C')), AssignCmd(VarExpr('x'), BooleanExpr(False)), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('i')), Token('CNAME', 'data')), VarExpr('memDATA'))]}, 'Exit': {'var': {'i': VarType(NODE)}, 'guard': OpExpr(=, n[i].st, C), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('i')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'E'))]}, 'Idle': {'var': {'i': VarType(NODE)}, 'guard': OpExpr(=, n[i].st, E), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('i')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'I')), AssignCmd(VarExpr('x'), BooleanExpr(True)), AssignCmd(VarExpr('memDATA'), FieldName(ArrayIndex(VarExpr('n'), VarExpr('i')), Token('CNAME', 'data')))]}, 'Store': {'var': {'i': VarType(NODE), 'd': VarType(DATA)}, 'guard': OpExpr(=, n[i].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('d')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('i')), Token('CNAME', 'data')), VarExpr('d'))]}}

All parameterized invariants:
{'coherence': {'invs': OpExpr(->, i != j, n[i].st = C ->   n[j].st != C), 'var': {'i': VarType(NODE), 'j': VarType(NODE)}}, 'c51': {'invs': OpExpr(->, i != j, (n[i].st = C ->   n[i].data = auxDATA) & (n[j].st = C ->   n[j].data = auxDATA)), 'var': {'i': VarType(NODE), 'j': VarType(NODE), 'auxDATA': VarType(DATA)}}}

All instantiated invariants:
{'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1': NegExpr(n[1].st = E & n[2].st = E)}

Invalid F:
{'coherence_Store1': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('1')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('1'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st'))], '!inv': NegExpr(1 != 2 -> (  n[1].st = C ->   n[2].st != C))}, 'coherence_Store2': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('2')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('2'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st'))], '!inv': NegExpr(1 != 2 -> (  n[1].st = C ->   n[2].st != C))}, 'coherence_Store3': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('1')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('1'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st'))], '!inv': NegExpr(1 != 2 -> (  n[1].st = C ->   n[2].st != C))}, 'coherence_Store4': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('2')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('2'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st'))], '!inv': NegExpr(1 != 2 -> (  n[1].st = C ->   n[2].st != C))}, 'coherence_Crit1_1_Try1': {'guard': OpExpr(=, n[1].st, I), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'T'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), VarExpr('x')], '!inv': NegExpr(!(n[2].st = C & x = true))}, 'coherence_Crit1_1_Exit1': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'E'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), VarExpr('x')], '!inv': NegExpr(!(n[2].st = C & x = true))}, 'coherence_Crit1_1_Store1': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('1')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('1'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), VarExpr('x')], '!inv': NegExpr(!(n[2].st = C & x = true))}, 'coherence_Crit1_1_Store2': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('2')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('2'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), VarExpr('x')], '!inv': NegExpr(!(n[2].st = C & x = true))}, 'coherence_Crit1_1_Store3': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('1')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('1'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), VarExpr('x')], '!inv': NegExpr(!(n[2].st = C & x = true))}, 'coherence_Crit1_1_Store4': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('2')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('2'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), VarExpr('x')], '!inv': NegExpr(!(n[2].st = C & x = true))}, 'c51_Crit1_1_Try1': {'guard': OpExpr(=, n[1].st, I), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'T'))], 'assumption': [VarExpr('memDATA'), VarExpr('auxDATA'), VarExpr('x')], '!inv': NegExpr(!(memDATA != auxDATA & x = true))}, 'c51_Crit1_1_Try2': {'guard': OpExpr(=, n[2].st, I), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'T'))], 'assumption': [VarExpr('memDATA'), VarExpr('auxDATA'), VarExpr('x')], '!inv': NegExpr(!(memDATA != auxDATA & x = true))}, 'c51_Crit1_1_Exit1': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'E'))], 'assumption': [VarExpr('memDATA'), VarExpr('auxDATA'), VarExpr('x')], '!inv': NegExpr(!(memDATA != auxDATA & x = true))}, 'c51_Crit1_1_Exit2': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'E'))], 'assumption': [VarExpr('memDATA'), VarExpr('auxDATA'), VarExpr('x')], '!inv': NegExpr(!(memDATA != auxDATA & x = true))}, 'c51_Store1_1_Store1': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('1')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('1'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[2].st = C & n[1].st = C))}, 'c51_Store1_1_Store2': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('2')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('2'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[2].st = C & n[1].st = C))}, 'c51_Store1_1_Store3': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('1')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('1'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[2].st = C & n[1].st = C))}, 'c51_Store1_1_Store4': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('2')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('2'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[2].st = C & n[1].st = C))}, 'coherence_Crit1_1_Idle1_1_Store1': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('1')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('1'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[2].st = C & n[1].st = E))}, 'coherence_Crit1_1_Idle1_1_Store2': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('2')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('2'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[2].st = C & n[1].st = E))}, 'coherence_Crit1_1_Idle1_1_Store3': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('1')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('1'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[2].st = C & n[1].st = E))}, 'coherence_Crit1_1_Idle1_1_Store4': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('2')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('2'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[2].st = C & n[1].st = E))}, 'c51_Crit1_1_Idle1_1_Try2': {'guard': OpExpr(=, n[2].st, I), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'T'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('auxDATA'), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].data != auxDATA & n[1].st = E))}, 'c51_Crit1_1_Idle1_1_Crit2': {'guard': OpExpr(&, n[2].st = T, x = true), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'C')), AssignCmd(VarExpr('x'), BooleanExpr(False)), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('memDATA'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('auxDATA'), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].data != auxDATA & n[1].st = E))}, 'c51_Crit1_1_Idle1_1_Exit2': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'E'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('auxDATA'), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].data != auxDATA & n[1].st = E))}, 'c51_Crit1_1_Idle1_1_Idle2': {'guard': OpExpr(=, n[2].st, E), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'I')), AssignCmd(VarExpr('x'), BooleanExpr(True)), AssignCmd(VarExpr('memDATA'), FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('auxDATA'), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].data != auxDATA & n[1].st = E))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Try2': {'guard': OpExpr(=, n[2].st, I), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'T'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), VarExpr('x')], '!inv': NegExpr(!(n[1].st = E & x = true))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Exit2': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'E'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), VarExpr('x')], '!inv': NegExpr(!(n[1].st = E & x = true))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Store1': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('1')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('1'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), VarExpr('x')], '!inv': NegExpr(!(n[1].st = E & x = true))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Store2': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('2')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('2'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), VarExpr('x')], '!inv': NegExpr(!(n[1].st = E & x = true))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Store3': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('1')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('1'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), VarExpr('x')], '!inv': NegExpr(!(n[1].st = E & x = true))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Store4': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('2')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('2'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), VarExpr('x')], '!inv': NegExpr(!(n[1].st = E & x = true))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1_Store1': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('1')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('1'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].st = E & n[2].st = E))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1_Store2': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('2')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('2'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].st = E & n[2].st = E))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1_Store3': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('1')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('1'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].st = E & n[2].st = E))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1_Store4': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(VarExpr('auxDATA'), VarExpr('2')), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('2'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].st = E & n[2].st = E))}}

Valid F:
{'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1_Try1': {'guard': OpExpr(=, n[1].st, I), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'T'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].st = E & n[2].st = E))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1_Try2': {'guard': OpExpr(=, n[2].st, I), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'T'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].st = E & n[2].st = E))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1_Crit1': {'guard': OpExpr(&, n[1].st = T, x = true), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'C')), AssignCmd(VarExpr('x'), BooleanExpr(False)), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')), VarExpr('memDATA'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].st = E & n[2].st = E))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1_Crit2': {'guard': OpExpr(&, n[2].st = T, x = true), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'C')), AssignCmd(VarExpr('x'), BooleanExpr(False)), AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')), VarExpr('memDATA'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].st = E & n[2].st = E))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1_Exit1': {'guard': OpExpr(=, n[1].st, C), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'E'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].st = E & n[2].st = E))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1_Exit2': {'guard': OpExpr(=, n[2].st, C), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'E'))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].st = E & n[2].st = E))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1_Idle1': {'guard': OpExpr(=, n[1].st, E), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'I')), AssignCmd(VarExpr('x'), BooleanExpr(True)), AssignCmd(VarExpr('memDATA'), FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'data')))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].st = E & n[2].st = E))}, 'coherence_Crit1_1_Idle1_1_Crit2_1_Idle2_1_Idle2': {'guard': OpExpr(=, n[2].st, E), 'assign': [AssignCmd(FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'st')), EnumValExpr(EnumType('I', 'T', 'C', 'E'), 'I')), AssignCmd(VarExpr('x'), BooleanExpr(True)), AssignCmd(VarExpr('memDATA'), FieldName(ArrayIndex(VarExpr('n'), VarExpr('2')), Token('CNAME', 'data')))], 'assumption': [FieldName(ArrayIndex(VarExpr('n'), VarExpr('1')), Token('CNAME', 'st'))], '!inv': NegExpr(!(n[1].st = E & n[2].st = E))}}

